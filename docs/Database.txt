necrobot (schema)
    dailies -- each row represents a Daily
        daily_id: int PK
            The unique ID for this daily
        type: tinyint UN PK
            The 'type' of daily this is (daily types are enumerated in Necrobot code)
        seed: int
            The seed for this daily
        msg_id: bigint UN
            The discord ID for the leaderboard message

    daily_runs -- each row represents an individual 'run' of a Daily
        daily_id: int PK (ref daily_data.daily_id)
            The unique ID for the daily
        type: tinyint UN PK (ref daily_data.type)
            The 'type' of daily
        user_id: bigint PK
            The user_id of the racer for this daily
        level: tinyint
            The level the racer died on (or -2 for a finish, 0 for unknown death, -1 for NOS)
        time: int
            The final time of the racer, if applicable

    leagues -- A list of CoNDOR events run on this bot, and information about each.
        schema_name: varchar(25) PK
            The name of the schema with the event's data (e.g. season5)
        league_name: tinytext
            A descriptive name of the event (e.g. "CoNDOR Season 5")
        race_type: mediumint UN
            The default race type for a match
        number_of_races: tinyint
            The default number of races for a match
        is_best_of: bit(1)
            Whether matches are best-of-X by default
        ranked: bit(1)
            Whether matches are ranked
        gsheet_id: tinytext
            The ID of the GSheet for this league
        deadline: tinytext
            A text description of a UTC deadline to schedule matches by (e.g. 'friday 1:30p')

    matches -- A list of matches, which are sets of races between the same two players.
               League matches do not go here.
        match_id: int UN AI PK
            The unique ID of the match.
        race_type_id: mediumint UN
            The type of races in the match.
        racer_1_id: smallint UN
            The first racer's Necrobot UID.
        racer_2_id: smallint UN
            The second racer's Necrobot UID.
        suggested_time: datetime
            The current suggestion for a time to have the match (or the time of the match, if confirmed).
        r1_confirmed: bit(1)
            Whether racer_1 has confirmed the suggested time.
        r2_confirmed: bit(1)
            Whether racer_2 has confirmed the suggested time.
        r1_unconfirmed: bit(1)
            Whether racer_1 wishes to unconfirm the suggested time.
        r2_unconfirmed: bit(1)
            Whether racer_2 wishes to unconfirm the suggested time.
        is_best_of: bit(1)
            Whether the match is a best-of-X or a repeat-X.
        number_of_races: tinyint
            This is X where the match is a best-of-X or a repeat-X.
        cawmentator_id: bigint UN
            The discord ID of the cawmentator for the match.
        channel_id: bigint UN
            The discord ID of this match's channel, if one exists.
        ranked: bit(1)
            Whether this match is ranked (the racer's ladder rankings will update).
        sheet_id: bigint
            If the match was created from a GSheet, the sheetID of the worksheet it was created from.
        sheet_row: int
            If the match was created from a GSheet, the row it was created from, relative to the header row

    match_races -- For each match, a list of races in that match, and data about the relationship.
        match_id: int UN PK
            The unique ID for the match for this race.
        race_number: smallint UN PK
            The race number for this race (within the match).
        race_id: int UN (ref races.race_id)
            The unique ID for this race.
        winner: tinyint
            The racer number of the winner of this race (1 or 2, or 0 for NOS). (This is derivable from other data,
            but is here for convenience.)
        canceled: bit(1)
            Whether this race has been canceled.
        contested: bit(1)
            Whether this race has been contested.

    races -- A list of races, and data about the kind of race
        race_id: int UN PK
            The unique ID for this race.
        timestamp: datetime
            The time this race was begun.
        seed: int
            The seed for this race, if applicable.
        condor: bit(1)
            Whether this race is an official CoNDOR race.
        private: bit(1)
            Whether this race was private (not open to everyone). True for all 1v1 match races.
        type_id: mediumint (ref race_types.type_id)
            The unique ID for the race type.

    race_runs -- A list of all runs within races (one row per racer per race)
        race_id: int UN PK
            The unique ID for the race.
        user_id: bigint UN PK
            The user ID of the racer.
        time: int
            The racer's time, in hundredths of a second (-1 is NOS).
        rank: tinyint
            The racer's rank (first, second, third) within the race.
        igt: int
            The racer's in-game-time in hundredths of a second, if supplied by the racer (-1 is NOS).
        level: tinyintuser_
            The racer the level died on, or: -2 for finish, 0 for unknown death, -1 for NOS.
        comment: text
            A comment about the race, if supplied by the racer.

    race_types -- A list of different kinds of races (e.g. "Cadence seeded amplified")
        type_id: mediumint UN AI PK
            The unique ID for this race type.
        character: varchar(50)
            The name of the character (e.g. "Cadence").
        descriptor: varchar(100)
            A custom descriptor for this race type (e.g. "5-shrine")
        seeded: bit(1)
            Whether the race is seeded.
        amplified: bit(1)
            Whether the race uses the Amplified DLC.
        seed_fixed: bit(1)
            Whether the seed for the race was specified (as opposed to randomly generated by the bot).

    ratings -- information relevant to the Necrobot ranked 1v1 ladder
        user_id: smallint UN PK
            The Necrobot user ID of the racer
        trueskill_mu: float
            The racer's TrueSkill mu.
        trueskill_sigma: float
            The racer's TrueSkill sigma.

    users -- Information about the Necrobot's users. At least one of discord_id and rtmp_name should be non-null.
        user_id: smallint UN AI PK
            The user's unique Necrobot ID.
        discord_id: bigint UN (unique)
            The user's discord ID, if applicable.
        discord_name: tinytext
            The user's discord nickname for this server.
        rtmp_name: varchar(25) (unique)
            The user's RTMP name, if applicable. Should not be treated as case-sensitive.
        twitch_name: tinytext
            The user's twitch name. Should not be treated as case-sensitive.
        timezone: tinytext
            A string representing the user's timezone (e.g. 'America/New_York').
        user_info: text
            Custom user information, entered by the user.
        daily_alert: bit(1)
            Whether the user receives Necrobot Daily alert PMs.
        race_alert: bit(1)
            Whether the user receives PMs when a new race room opens.

league_name (schema) -- the tables here mirror the corresponding tables in necrobot
    entrants -- A list of entrants for the league
        user_id: smallint UN AI PK
            The user's unique Necrobot ID

    # These tables follow the Necrobot format
    matches -- matches in this event
    match_races -- races in this event, and data about how they relate to the match they're in
    races -- races in this event, all non-match-related data
    race_runs -- each row is a racer's data for an individual race

    # Convenience Views
    league_info -- Has exactly one row, which is the row from necrobot.leagues corresponding to this league
    match_info -- One row per match
        match_id: int
            id of the match (same as matches.match_id)
        racer_1_name: text
            Display name of racer 1 (currently, twitch name)
        racer_2_name: text
            Display name of racer 2
        scheduled_time: datetime (or NULL)
            same as matches.scheduled_time
        cawmentator_name: text (or NULL)
            Display name of the cawmentator, if one (twitch name)
        vod: text (or NULL)
            Link to a vod for this match, if one (set via the .vod command by this matches cawmentator)
        autogenned: boolean
            Whether the match was auto-generated or a "challenge" match (Season 8 only)
        is_best_of: boolean
            Whether the match is a best-of-X (if True) or a repeat-X (if false)
        number_of_races: int
            X, where the match is a best-of-X or a repeat-X
        num_finished: int
            The number of races that have been finished in this match.
        racer_1_wins: int
            The number of wins racer 1 has.
        racer_2_wins: int
            The number of wins racer 2 has.
        completed: boolean
            Whether the match is completed (derived from is_best_of, number_of_races, and win counts).
    race_summary -- One row per race
        match_id: int
            The ID of the match this race belongs to
        race_number: int
            The number the race is for this match. (match_id and race_number uniquely identify the race.)
        winner_id: int
            The necrobot.users.user_id of the race winner
        loser_id: int
            The necrobot.users.user_id of the race loser
        winner_time: int
            The time achieved by the race winner, in hundredths of a second, if any
        loser_time: int
            The time achieved by the race loser, in hundredths of a second, if any